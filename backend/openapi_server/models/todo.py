# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.ai_task import AITask
from openapi_server.models.schedule import Schedule
from openapi_server import util

from openapi_server.models.ai_task import AITask  # noqa: E501
from openapi_server.models.schedule import Schedule  # noqa: E501

class Todo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, uuid=None, tasks=None, schedules=None):  # noqa: E501
        """Todo - a model defined in OpenAPI

        :param uuid: The uuid of this Todo.  # noqa: E501
        :type uuid: str
        :param tasks: The tasks of this Todo.  # noqa: E501
        :type tasks: List[AITask]
        :param schedules: The schedules of this Todo.  # noqa: E501
        :type schedules: List[Schedule]
        """
        self.openapi_types = {
            'uuid': str,
            'tasks': List[AITask],
            'schedules': List[Schedule]
        }

        self.attribute_map = {
            'uuid': 'uuid',
            'tasks': 'tasks',
            'schedules': 'schedules'
        }

        self._uuid = uuid
        self._tasks = tasks
        self._schedules = schedules

    @classmethod
    def from_dict(cls, dikt) -> 'Todo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Todo of this Todo.  # noqa: E501
        :rtype: Todo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def uuid(self):
        """Gets the uuid of this Todo.


        :return: The uuid of this Todo.
        :rtype: str
        """
        return self._uuid

    @uuid.setter
    def uuid(self, uuid):
        """Sets the uuid of this Todo.


        :param uuid: The uuid of this Todo.
        :type uuid: str
        """

        self._uuid = uuid

    @property
    def tasks(self):
        """Gets the tasks of this Todo.


        :return: The tasks of this Todo.
        :rtype: List[AITask]
        """
        return self._tasks

    @tasks.setter
    def tasks(self, tasks):
        """Sets the tasks of this Todo.


        :param tasks: The tasks of this Todo.
        :type tasks: List[AITask]
        """

        self._tasks = tasks

    @property
    def schedules(self):
        """Gets the schedules of this Todo.


        :return: The schedules of this Todo.
        :rtype: List[Schedule]
        """
        return self._schedules

    @schedules.setter
    def schedules(self, schedules):
        """Sets the schedules of this Todo.


        :param schedules: The schedules of this Todo.
        :type schedules: List[Schedule]
        """

        self._schedules = schedules
