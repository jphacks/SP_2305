# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class Schedule(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, uuid=None, user_id=None, title=None, start=None, end=None, description=None, color=None):  # noqa: E501
        """Schedule - a model defined in OpenAPI

        :param uuid: The uuid of this Schedule.  # noqa: E501
        :type uuid: str
        :param user_id: The user_id of this Schedule.  # noqa: E501
        :type user_id: str
        :param title: The title of this Schedule.  # noqa: E501
        :type title: str
        :param start: The start of this Schedule.  # noqa: E501
        :type start: datetime
        :param end: The end of this Schedule.  # noqa: E501
        :type end: datetime
        :param description: The description of this Schedule.  # noqa: E501
        :type description: str
        :param color: The color of this Schedule.  # noqa: E501
        :type color: str
        """
        self.openapi_types = {
            'uuid': str,
            'user_id': str,
            'title': str,
            'start': datetime,
            'end': datetime,
            'description': str,
            'color': str
        }

        self.attribute_map = {
            'uuid': 'uuid',
            'user_id': 'userId',
            'title': 'title',
            'start': 'start',
            'end': 'end',
            'description': 'description',
            'color': 'color'
        }

        self._uuid = uuid
        self._user_id = user_id
        self._title = title
        self._start = start
        self._end = end
        self._description = description
        self._color = color

    @classmethod
    def from_dict(cls, dikt) -> 'Schedule':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Schedule of this Schedule.  # noqa: E501
        :rtype: Schedule
        """
        return util.deserialize_model(dikt, cls)

    @property
    def uuid(self):
        """Gets the uuid of this Schedule.


        :return: The uuid of this Schedule.
        :rtype: str
        """
        return self._uuid

    @uuid.setter
    def uuid(self, uuid):
        """Sets the uuid of this Schedule.


        :param uuid: The uuid of this Schedule.
        :type uuid: str
        """

        self._uuid = uuid

    @property
    def user_id(self):
        """Gets the user_id of this Schedule.


        :return: The user_id of this Schedule.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this Schedule.


        :param user_id: The user_id of this Schedule.
        :type user_id: str
        """

        self._user_id = user_id

    @property
    def title(self):
        """Gets the title of this Schedule.


        :return: The title of this Schedule.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this Schedule.


        :param title: The title of this Schedule.
        :type title: str
        """

        self._title = title

    @property
    def start(self):
        """Gets the start of this Schedule.


        :return: The start of this Schedule.
        :rtype: datetime
        """
        return self._start

    @start.setter
    def start(self, start):
        """Sets the start of this Schedule.


        :param start: The start of this Schedule.
        :type start: datetime
        """

        self._start = start

    @property
    def end(self):
        """Gets the end of this Schedule.


        :return: The end of this Schedule.
        :rtype: datetime
        """
        return self._end

    @end.setter
    def end(self, end):
        """Sets the end of this Schedule.


        :param end: The end of this Schedule.
        :type end: datetime
        """

        self._end = end

    @property
    def description(self):
        """Gets the description of this Schedule.


        :return: The description of this Schedule.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this Schedule.


        :param description: The description of this Schedule.
        :type description: str
        """

        self._description = description

    @property
    def color(self):
        """Gets the color of this Schedule.


        :return: The color of this Schedule.
        :rtype: str
        """
        return self._color

    @color.setter
    def color(self, color):
        """Sets the color of this Schedule.


        :param color: The color of this Schedule.
        :type color: str
        """

        self._color = color
